{"version":3,"sources":["Images/todo.svg.svg","Components/Todo.jsx","App.js","index.js"],"names":["Todo","useState","inputData","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","item","setItem","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","currElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","stringify","className","src","todoImage","alt","type","placeholder","value","onChange","event","target","onClick","index","itemEdited","find","editItem","updatedItem","filter","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAe,G,MAAA,IAA0B,sC,OCwH1BA,EA3GF,WAET,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAZP,WACjB,IAAMG,EAAQC,aAAaC,QAAQ,cACnC,OAAGF,EACQG,KAAKC,MAAMJ,GAEX,GAOsBK,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAEMC,EAAU,WACZ,GAAId,EAGC,GAAGA,GAAaY,EACjBH,EACID,EAAKO,KAAI,SAACC,GACN,OAAGA,EAASC,KAAOP,EACR,2BAAIM,GAAX,IAAqBE,KAAMlB,IAExBgB,MAGff,EAAa,IACbU,EAAc,MACdE,GAAgB,OAEf,CACD,IAAMM,EAAiB,CACnBF,IAAG,IAAIG,MAAOC,UAAUC,WACxBJ,KAAMlB,GAEVS,EAAQ,GAAD,mBAAKD,GAAL,CAAUW,KACjBlB,EAAa,SArBbsB,MAAM,kDAiDd,OAJAC,qBAAU,WACPrB,aAAaM,QAAQ,aAAcJ,KAAKoB,UAAUjB,MAClD,CAACA,IAGA,mCACI,qBAAKkB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAKC,EAAWC,IAAI,SACzB,wEAEJ,sBAAKH,UAAU,WAAf,UACI,uBAAOI,KAAK,OACRC,YAAY,kBACZL,UAAU,eACVM,MAAOhC,EACPiC,SAAW,SAACC,GAAD,OAAWjC,EAAaiC,EAAMC,OAAOH,UAEnDpB,EACG,mBAAGc,UAAU,sBAAsBU,QAAStB,IAE5C,mBAAGY,UAAU,qBAAqBU,QAAStB,OAKnD,qBAAKY,UAAU,YAAf,SACKlB,EAAKO,KAAI,SAACC,GACP,OACI,sBAAKU,UAAU,WAAf,UACA,6BAAKV,EAASE,OACd,sBAAKQ,UAAU,cAAf,UACI,mBAAGA,UAAU,sBAAsBU,QAAS,kBArD3D,SAACC,GACd,IAAMC,EAAa9B,EAAK+B,MAAK,SAACvB,GAC1B,OAAOA,EAASC,KAAOoB,KAE3BpC,EAAaqC,EAAWpB,MACxBP,EAAc0B,GACdxB,GAAgB,GA+C8D2B,CAASxB,EAASC,OACpE,mBAAGS,UAAU,2BAA2BU,QAAS,kBA7C9D,SAACC,GAChB,IAAMI,EAAcjC,EAAKkC,QAAO,SAAC1B,GAC7B,OAAOA,EAASC,KAAOoB,KAE3B5B,EAAQgC,GAyC2EE,CAAW3B,EAASC,YAJhDD,EAASC,SAYpD,qBAAKS,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAe,oBAAkB,aAAaU,QA/ClE,WACd3B,EAAQ,KA8CQ,SACI,0DCpGbmC,MARf,WACE,OACE,mCACI,cAAC,EAAD,OCDRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5b7097de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todo.svg.6b618fcd.svg\";","import React, {useState, useEffect} from 'react'\r\nimport '../Components/Styles.css'\r\nimport todoImage from '../Images/todo.svg.svg'\r\n\r\nconst getLocalData = () => {\r\n    const lists = localStorage.getItem(\"mytodolist\");\r\n    if(lists) {\r\n        return JSON.parse(lists);\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\nconst Todo = () => {\r\n\r\n    const [inputData, setInputData] = useState(\"\");\r\n    const [item, setItem] = useState(getLocalData());\r\n    const [isEditItem, setIsEditItem] = useState(\"\");\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n\r\n    const addItem = () => {\r\n        if(!inputData){\r\n            alert(\"🚨🚨 Please Fill The Data\")\r\n        } \r\n        else if(inputData && toggleButton){\r\n            setItem(\r\n                item.map((currElem) => {\r\n                    if(currElem.id === isEditItem){\r\n                        return {...currElem, name: inputData};\r\n                    }\r\n                    return currElem;\r\n                })\r\n            );\r\n            setInputData(\"\");\r\n            setIsEditItem(null);\r\n            setToggleButton(false);\r\n        }\r\n        else {\r\n            const myNewInputData = {\r\n                id:new Date().getTime().toString(),\r\n                name: inputData,\r\n            }\r\n            setItem([...item,myNewInputData]);\r\n            setInputData(\"\");\r\n        }\r\n    }\r\n\r\n    const editItem = (index) => {\r\n        const itemEdited = item.find((currElem) => {\r\n            return currElem.id === index;\r\n        })\r\n        setInputData(itemEdited.name);\r\n        setIsEditItem(index);\r\n        setToggleButton(true);\r\n    }\r\n\r\n    const deleteItem = (index) =>{\r\n        const updatedItem = item.filter((currElem)=>{\r\n            return currElem.id !== index;\r\n        });\r\n        setItem(updatedItem);\r\n    }\r\n\r\n    const removeAll = () => {\r\n        setItem([]);\r\n    }\r\n\r\n    useEffect(() => {\r\n       localStorage.setItem(\"mytodolist\", JSON.stringify(item));\r\n    }, [item])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src={todoImage} alt=\"todo\"/>\r\n                        <figcaption> Add Your List Here ✌ </figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type='text' \r\n                            placeholder='✍ Add Item' \r\n                            className='form-control'\r\n                            value={inputData}\r\n                            onChange= {(event) => setInputData(event.target.value)}\r\n                        />\r\n                        {toggleButton ? (\r\n                            <i className='fas fa-edit add-btn' onClick={addItem}></i>                           \r\n                        ):(\r\n                            <i className='fa fa-plus add-btn' onClick={addItem}></i>\r\n                        )}\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        {item.map((currElem) => {\r\n                            return (\r\n                                <div className=\"eachItem\" key={currElem.id}>\r\n                                <h3>{currElem.name}</h3>\r\n                                <div className=\"todo-button\">\r\n                                    <i className='fas fa-edit add-btn' onClick={() => editItem(currElem.id)}></i>\r\n                                    <i className='fas fa-trash-alt add-btn' onClick={() => deleteItem(currElem.id)}></i>\r\n                                </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}>\r\n                            <span>Check List</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import './App.css';\nimport Todo from './Components/Todo';\n\nfunction App() {\n  return (\n    <>\n        <Todo />\n    </>   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}